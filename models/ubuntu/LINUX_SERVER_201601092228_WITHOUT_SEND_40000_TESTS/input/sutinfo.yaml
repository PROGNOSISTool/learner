name: TCP
inputInterfaces:
  LISTEN: []
  ACCEPT: []
#  CONNECT: []
  RCV: []
  CLOSECONNECTION: []
  SYN(V,V,0): []
  ACK(V,V,0): []
  ACK+PSH(V,V,1): []
  FIN+ACK(V,V,0): []
  SYN+ACK(V,V,0): []
  RST(V,V,0): []
  ACK+RST(V,V,0): []
  CLOSE: []
#  SEND: []
outputInterfaces:
  ACK(ARECV,ARECV): []
  ACK(ARECV,ASENT): []
  ACK(ARECV,INV): []
  ACK(ARECV,S+1SENT): []
  ACK(ARECV,S+D+1SENT): []
  ACK(ARECV,S+DSENT): []
  ACK(FRESH,ARECV): []
  ACK(FRESH,ASENT): []
  ACK(FRESH,INV): []
  ACK(FRESH,S+1SENT): []
  ACK(FRESH,S+D+1SENT): []
  ACK(FRESH,S+DSENT): []
  ACK(INV,ARECV): []
  ACK(INV,ASENT): []
  ACK(INV,INV): []
  ACK(INV,S+1SENT): []
  ACK(INV,S+D+1SENT): []
  ACK(INV,S+DSENT): []
  ACK(S+1RECV,ARECV): []
  ACK(S+1RECV,ASENT): []
  ACK(S+1RECV,INV): []
  ACK(S+1RECV,S+1SENT): []  
  ACK(S+1RECV,S+D+1SENT): []
  ACK(S+1RECV,S+DSENT): []
  ACK(SRECV,ARECV): []
  ACK(SRECV,ASENT): []
  ACK(SRECV,INV): []
  ACK(SRECV,S+1SENT): []
  ACK(SRECV,S+D+1SENT): []
  ACK(SRECV,S+DSENT): []
  ACK(ZERO,ARECV): []
  ACK(ZERO,ASENT): []
  ACK(ZERO,INV): []
  ACK(ZERO,S+1SENT): []
  ACK(ZERO,S+D+1SENT): []
  ACK(ZERO,S+DSENT): []
  ACK+FIN(ARECV,ARECV): []
  ACK+FIN(ARECV,ASENT): []
  ACK+FIN(ARECV,INV): []
  ACK+FIN(ARECV,S+1SENT): []
  ACK+FIN(ARECV,S+D+1SENT): []
  ACK+FIN(ARECV,S+DSENT): []
  ACK+FIN(FRESH,ARECV): []
  ACK+FIN(FRESH,ASENT): []
  ACK+FIN(FRESH,INV): []
  ACK+FIN(FRESH,S+1SENT): []
  ACK+FIN(FRESH,S+D+1SENT): []
  ACK+FIN(FRESH,S+DSENT): []
  ACK+FIN(INV,ARECV): []
  ACK+FIN(INV,ASENT): []
  ACK+FIN(INV,INV): []
  ACK+FIN(INV,S+1SENT): []
  ACK+FIN(INV,S+D+1SENT): []
  ACK+FIN(INV,S+DSENT): []
  ACK+FIN(S+1RECV,ARECV): []
  ACK+FIN(S+1RECV,ASENT): []
  ACK+FIN(S+1RECV,INV): []
  ACK+FIN(S+1RECV,S+1SENT): []
  ACK+FIN(S+1RECV,S+D+1SENT): []
  ACK+FIN(S+1RECV,S+DSENT): []
  ACK+FIN(SRECV,ARECV): []
  ACK+FIN(SRECV,ASENT): []
  ACK+FIN(SRECV,INV): []
  ACK+FIN(SRECV,S+1SENT): []
  ACK+FIN(SRECV,S+D+1SENT): []
  ACK+FIN(SRECV,S+DSENT): []
  ACK+FIN(ZERO,ARECV): []
  ACK+FIN(ZERO,ASENT): []
  ACK+FIN(ZERO,INV): []
  ACK+FIN(ZERO,S+1SENT): []
  ACK+FIN(ZERO,S+D+1SENT): []
  ACK+FIN(ZERO,S+DSENT): []
  ACK+RST(ARECV,ARECV): []
  ACK+RST(ARECV,ASENT): []
  ACK+RST(ARECV,INV): []
  ACK+RST(ARECV,S+1SENT): []
  ACK+RST(ARECV,S+D+1SENT): []
  ACK+RST(ARECV,S+DSENT): []
  ACK+RST(FRESH,ARECV): []
  ACK+RST(FRESH,ASENT): []
  ACK+RST(FRESH,INV): []
  ACK+RST(FRESH,S+1SENT): []
  ACK+RST(FRESH,S+D+1SENT): []
  ACK+RST(FRESH,S+DSENT): []
  ACK+RST(INV,ARECV): []
  ACK+RST(INV,ASENT): []
  ACK+RST(INV,INV): []
  ACK+RST(INV,S+1SENT): []
  ACK+RST(INV,S+D+1SENT): []
  ACK+RST(INV,S+DSENT): []
  ACK+RST(S+1RECV,ARECV): []
  ACK+RST(S+1RECV,ASENT): []
  ACK+RST(S+1RECV,INV): []
  ACK+RST(S+1RECV,S+1SENT): []
  ACK+RST(S+1RECV,S+D+1SENT): []
  ACK+RST(S+1RECV,S+DSENT): []
  ACK+RST(SRECV,ARECV): []
  ACK+RST(SRECV,ASENT): []
  ACK+RST(SRECV,INV): []
  ACK+RST(SRECV,S+1SENT): []
  ACK+RST(SRECV,S+D+1SENT): []
  ACK+RST(SRECV,S+DSENT): []
  ACK+RST(ZERO,ARECV): []
  ACK+RST(ZERO,ASENT): []
  ACK+RST(ZERO,INV): []
  ACK+RST(ZERO,S+1SENT): []
  ACK+RST(ZERO,S+D+1SENT): []
  ACK+RST(ZERO,S+DSENT): []
  FIN(ARECV,ARECV): []
  FIN(ARECV,ASENT): []
  FIN(ARECV,INV): []
  FIN(ARECV,S+1SENT): []
  FIN(ARECV,S+D+1SENT): []
  FIN(ARECV,S+DSENT): []
  FIN(FRESH,ARECV): []
  FIN(FRESH,ASENT): []
  FIN(FRESH,INV): []
  FIN(FRESH,S+1SENT): []
  FIN(FRESH,S+D+1SENT): []
  FIN(FRESH,S+DSENT): []
  FIN(INV,ARECV): []
  FIN(INV,ASENT): []
  FIN(INV,INV): []
  FIN(INV,S+1SENT): []
  FIN(INV,S+D+1SENT): []
  FIN(INV,S+DSENT): []
  FIN(S+1RECV,ARECV): []
  FIN(S+1RECV,ASENT): []
  FIN(S+1RECV,INV): []
  FIN(S+1RECV,S+1SENT): []
  FIN(S+1RECV,S+D+1SENT): []
  FIN(S+1RECV,S+DSENT): []
  FIN(SRECV,ARECV): []
  FIN(SRECV,ASENT): []
  FIN(SRECV,INV): []
  FIN(SRECV,S+1SENT): []
  FIN(SRECV,S+D+1SENT): []
  FIN(SRECV,S+DSENT): []
  FIN(ZERO,ARECV): []
  FIN(ZERO,ASENT): []
  FIN(ZERO,INV): []
  FIN(ZERO,S+1SENT): []
  FIN(ZERO,S+D+1SENT): []
  FIN(ZERO,S+DSENT): []
  RST(ARECV,ARECV): []
  RST(ARECV,ASENT): []
  RST(ARECV,INV): []
  RST(ARECV,S+1SENT): []
  RST(ARECV,S+D+1SENT): []
  RST(ARECV,S+DSENT): []
  RST(FRESH,ARECV): []
  RST(FRESH,ASENT): []
  RST(FRESH,INV): []
  RST(FRESH,S+1SENT): []
  RST(FRESH,S+D+1SENT): []
  RST(FRESH,S+DSENT): []
  RST(INV,ARECV): []
  RST(INV,ASENT): []
  RST(INV,INV): []
  RST(INV,S+1SENT): []
  RST(INV,S+D+1SENT): []
  RST(INV,S+DSENT): []
  RST(S+1RECV,ARECV): []
  RST(S+1RECV,ASENT): []
  RST(S+1RECV,INV): []
  RST(S+1RECV,S+1SENT): []
  RST(S+1RECV,S+D+1SENT): []
  RST(S+1RECV,S+DSENT): []
  RST(SRECV,ARECV): []
  RST(SRECV,ASENT): []
  RST(SRECV,INV): []
  RST(SRECV,S+1SENT): []
  RST(SRECV,S+D+1SENT): []
  RST(SRECV,S+DSENT): []
  RST(ZERO,ARECV): []
  RST(ZERO,ASENT): []
  RST(ZERO,INV): []
  RST(ZERO,S+1SENT): []
  RST(ZERO,S+D+1SENT): []
  RST(ZERO,S+DSENT): []
  SYN(ARECV,ARECV): []
  SYN(ARECV,ASENT): []
  SYN(ARECV,INV): []
  SYN(ARECV,S+1SENT): []
  SYN(ARECV,S+D+1SENT): []
  SYN(ARECV,S+DSENT): []
  SYN(FRESH,ARECV): []
  SYN(FRESH,ASENT): []
  SYN(FRESH,INV): []
  SYN(FRESH,S+1SENT): []
  SYN(FRESH,S+D+1SENT): []
  SYN(FRESH,S+DSENT): []
  SYN(INV,ARECV): []
  SYN(INV,ASENT): []
  SYN(INV,INV): []
  SYN(INV,S+1SENT): []
  SYN(INV,S+D+1SENT): []
  SYN(INV,S+DSENT): []
  SYN(S+1RECV,ARECV): []
  SYN(S+1RECV,ASENT): []
  SYN(S+1RECV,INV): []
  SYN(S+1RECV,S+1SENT): []
  SYN(S+1RECV,S+D+1SENT): []
  SYN(S+1RECV,S+DSENT): []
  SYN(SRECV,ARECV): []
  SYN(SRECV,ASENT): []
  SYN(SRECV,INV): []
  SYN(SRECV,S+1SENT): []
  SYN(SRECV,S+D+1SENT): []
  SYN(SRECV,S+DSENT): []
  SYN(ZERO,ARECV): []
  SYN(ZERO,ASENT): []
  SYN(ZERO,INV): []
  SYN(ZERO,S+1SENT): []
  SYN(ZERO,S+D+1SENT): []
  SYN(ZERO,S+DSENT): []
  SYN+ACK(ARECV,ARECV): []
  SYN+ACK(ARECV,ASENT): []
  SYN+ACK(ARECV,INV): []
  SYN+ACK(ARECV,S+1SENT): []
  SYN+ACK(ARECV,S+D+1SENT): []
  SYN+ACK(ARECV,S+DSENT): []
  SYN+ACK(FRESH,ARECV): []
  SYN+ACK(FRESH,ASENT): []
  SYN+ACK(FRESH,INV): []
  SYN+ACK(FRESH,S+1SENT): []
  SYN+ACK(FRESH,S+D+1SENT): []
  SYN+ACK(FRESH,S+DSENT): []
  SYN+ACK(INV,ARECV): []
  SYN+ACK(INV,ASENT): []
  SYN+ACK(INV,INV): []
  SYN+ACK(INV,S+1SENT): []
  SYN+ACK(INV,S+D+1SENT): []
  SYN+ACK(INV,S+DSENT): []
  SYN+ACK(S+1RECV,ARECV): []
  SYN+ACK(S+1RECV,ASENT): []
  SYN+ACK(S+1RECV,INV): []
  SYN+ACK(S+1RECV,S+1SENT): []
  SYN+ACK(S+1RECV,S+D+1SENT): []
  SYN+ACK(S+1RECV,S+DSENT): []
  SYN+ACK(SRECV,ARECV): []
  SYN+ACK(SRECV,ASENT): []
  SYN+ACK(SRECV,INV): []
  SYN+ACK(SRECV,S+1SENT): []
  SYN+ACK(SRECV,S+D+1SENT): []
  SYN+ACK(SRECV,S+DSENT): []
  SYN+ACK(ZERO,ARECV): []
  SYN+ACK(ZERO,ASENT): []
  SYN+ACK(ZERO,INV): []
  SYN+ACK(ZERO,S+1SENT): []
  SYN+ACK(ZERO,S+D+1SENT): []
  SYN+ACK(ZERO,S+DSENT): []
constants: []
